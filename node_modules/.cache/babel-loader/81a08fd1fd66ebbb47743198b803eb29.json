{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaiwa\\\\OneDrive\\\\Desktop\\\\portfolio2022\\\\client\\\\src\\\\PortfolioContainer\\\\Home\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fontawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, Screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this));\n  };\n\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  }; // useEffect (()=>{ \n  //     return () => {\n  //         currentScreenSubscription.unsubscribe();\n  //     };\n  // }, [currentScreenSubscription]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-options\",\n      onClick: () => setShowHeaderOptions(!showHeaderOptions),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-hamburger\",\n          onClick: () => setShowHeaderOptions(!showHeaderOptions),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"header-hamburger-bars\",\n            icon: faBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"KAI~\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n          children: getHeaderOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \") )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/kaiwa/OneDrive/Desktop/portfolio2022/client/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","Screen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {TOTAL_SCREENS, GET_SCREEN_INDEX} from '../../../utilities/commonUtils'\r\nimport ScrollService from '../../../utilities/ScrollService'\r\nimport{faBars} from '@fontawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './Header.css' \r\n\r\nexport default function Header () {\r\n    const [selectedScreen, setSelectedScreen] = useState(0)\r\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false)\r\n\r\n    const updateCurrentScreen = (currentScreen)=>{\r\n        if(!currentScreen || !currentScreen.screenInView) \r\n        return;\r\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\r\n        if(screenIndex < 0)\r\n        return\r\n    }\r\n    let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\r\n    \r\n    const getHeaderOptions = ()=>{\r\n        return (\r\n            TOTAL_SCREENS.map((screen, i)=>(\r\n                <div key={Screen.screen_name} className={getHeaderOptionsClass(i)}\r\n                onClick={() => switchScreen(i, screen)}>\r\n                    <span>{Screen.screen_name}</span>\r\n                </div>\r\n            ))\r\n        )\r\n    }\r\n    const getHeaderOptionsClass =(index)=>{\r\n        let classes = \"header-option\";\r\n        if (index < TOTAL_SCREENS.length -1)\r\n        classes += \"header-option-seperator\";\r\n\r\n        if(selectedScreen === index)\r\n        classes += \"selected-header-option\";\r\n        return\r\n    }\r\n\r\n    const switchScreen = (index, screen) =>{\r\n        let screenComponent = document.getElementById(screen.screen_name)\r\n        if(!screenComponent)\r\n        return\r\n\r\n        screenComponent.scrollIntoView({behavior: \"smooth\"});\r\n        setSelectedScreen(index);\r\n        setShowHeaderOptions(false);\r\n    };\r\n\r\n    // useEffect (()=>{ \r\n    //     return () => {\r\n    //         currentScreenSubscription.unsubscribe();\r\n    //     };\r\n    // }, [currentScreenSubscription]);\r\n    \r\n    return (\r\n        <div>\r\n                <div className = \"header-options\" onClick={()=>setShowHeaderOptions(!showHeaderOptions)}>\r\n                    <div className='header-parent'>\r\n                        <div className=\"header-hamburger\" onClick={()=>setShowHeaderOptions(!showHeaderOptions)}>\r\n\r\n                        <FontAwesomeIcon className='header-hamburger-bars' icon={faBars} />\r\n                    </div>\r\n                    <div className=\"header-logo\">\r\n                        <span>KAI~</span>\r\n                    </div>\r\n                    <div className={(showHeaderOptions)?\"header-options show-hamburger-options\": \"header-options\"}>\r\n                        {getHeaderOptions()}\r\n                    </div>\r\n                )\r\n            )\r\n         </div> \r\n        </div>\r\n     )\r\n    </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}