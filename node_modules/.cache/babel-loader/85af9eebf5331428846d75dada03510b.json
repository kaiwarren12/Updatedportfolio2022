{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaiwa\\\\OneDrive\\\\Desktop\\\\portfolio2022\\\\client\\\\src\\\\PortfolioContainer\\\\Home\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fontawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentscreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentSreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/kaiwa/OneDrive/Desktop/portfolio2022/client/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentscreen","currentScreen","screenInView","screenIndex","currentSreen","currentScreenSubscription","currentScreenBroadCaster","subscribe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,QAA8C,gCAA9C;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAAOC,MAAP,QAAoB,mCAApB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,MAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACS,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC,KAAD,CAA1D;;AAEA,QAAMW,mBAAmB,GAAIC,aAAD,IAAiB;AACzC,QAAG,CAACC,aAAD,IAAkB,CAACA,aAAa,CAACC,YAApC,EACA;AACA,QAAIC,WAAW,GAAGb,gBAAgB,CAACc,YAAY,CAACF,YAAd,CAAlC;AACA,QAAGC,WAAW,GAAG,CAAjB,EACA;AACH,GAND;;AAOA,MAAIE,yBAAyB,GAAGd,aAAa,CAACe,wBAAd,CAAuCC,SAAvC,CAAiDR,mBAAjD,CAAhC;AACA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAjBuBL,M;;KAAAA,M","sourcesContent":["import React, {useState} from \"react\";\r\nimport {TOTAL_SCREENS, GET_SCREEN_INDEX} from '../../../utilities/commonUtils'\r\nimport ScrollService from '../../../utilities/ScrollService'\r\nimport{faBars} from '@fontawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './Header.css' \r\n\r\nexport default function Header () {\r\n    const [selectedScreen, setSelectedScreen] = useState(0)\r\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false)\r\n\r\n    const updateCurrentScreen = (currentscreen)=>{\r\n        if(!currentScreen || !currentScreen.screenInView) \r\n        return;\r\n        let screenIndex = GET_SCREEN_INDEX(currentSreen.screenInView)\r\n        if(screenIndex < 0)\r\n        return\r\n    }\r\n    let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}